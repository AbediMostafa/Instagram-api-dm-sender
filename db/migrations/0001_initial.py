# Generated by Django 5.1.3 on 2025-08-20 22:17

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("title", models.CharField(max_length=255)),
                ("number_of_follow_ups", models.IntegerField()),
                ("hour_interval", models.IntegerField()),
                ("description", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(blank=True, null=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "categories",
            },
        ),
        migrations.CreateModel(
            name="Color",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("title", models.CharField(max_length=255, unique=True)),
                ("is_used", models.SmallIntegerField()),
            ],
            options={
                "db_table": "colors",
            },
        ),
        migrations.CreateModel(
            name="Profile",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("title", models.CharField(max_length=255)),
                ("folder", models.CharField(max_length=255)),
                ("profile_id", models.CharField(max_length=255)),
                ("created_at", models.DateTimeField(blank=True, null=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
                ("is_used", models.SmallIntegerField()),
            ],
            options={
                "db_table": "profiles",
            },
        ),
        migrations.CreateModel(
            name="Proxy",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("ip", models.CharField(max_length=255)),
                ("port", models.IntegerField()),
                ("username", models.CharField(max_length=255)),
                ("password", models.CharField(max_length=255)),
                ("state", models.CharField(max_length=255)),
                ("is_used", models.SmallIntegerField()),
            ],
            options={
                "db_table": "proxies",
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=255)),
                ("email", models.CharField(max_length=255, unique=True)),
                ("password", models.CharField(max_length=255)),
                ("created_at", models.DateTimeField(blank=True, null=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "users",
            },
        ),
        migrations.CreateModel(
            name="Account",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("secret_key", models.CharField(blank=True, max_length=255, null=True)),
                ("username", models.CharField(max_length=255, unique=True)),
                ("email", models.CharField(blank=True, max_length=255, null=True)),
                ("password", models.CharField(max_length=255)),
                ("name", models.CharField(blank=True, max_length=255, null=True)),
                ("bio", models.TextField(blank=True, null=True)),
                ("profile_pic_url", models.TextField(blank=True, null=True)),
                ("instagram_state", models.CharField(max_length=255)),
                ("app_state", models.CharField(max_length=255)),
                ("is_used", models.SmallIntegerField()),
                ("avatar_changed", models.SmallIntegerField()),
                ("username_changed", models.SmallIntegerField()),
                ("initial_posts_deleted", models.SmallIntegerField()),
                ("has_enough_posts", models.SmallIntegerField()),
                ("is_public", models.SmallIntegerField()),
                ("is_active", models.SmallIntegerField()),
                ("web_session", models.TextField(blank=True, null=True)),
                ("mobile_session", models.TextField(blank=True, null=True)),
                ("log", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(blank=True, null=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
                ("next_login", models.DateTimeField(blank=True, null=True)),
                ("fingerprint", models.JSONField(blank=True, null=True)),
                ("phone", models.CharField(blank=True, null=True)),
                ("screenshot_taken", models.SmallIntegerField()),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="db.category",
                    ),
                ),
                (
                    "color",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="db.color",
                    ),
                ),
                (
                    "profile",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="db.profile",
                    ),
                ),
                (
                    "proxy",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="db.proxy",
                    ),
                ),
            ],
            options={
                "db_table": "accounts",
            },
        ),
        migrations.CreateModel(
            name="DmPost",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(blank=True, null=True)),
                ("priority", models.SmallIntegerField(blank=True, null=True)),
                (
                    "media_id",
                    models.CharField(
                        blank=True, max_length=255, null=True, unique=True
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="db.category",
                    ),
                ),
            ],
            options={
                "db_table": "dm_posts",
            },
        ),
        migrations.CreateModel(
            name="Lead",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("instagram_id", models.BigIntegerField(blank=True, null=True)),
                ("username", models.CharField(max_length=255, unique=True)),
                ("times", models.IntegerField(blank=True, null=True)),
                ("last_state", models.CharField(max_length=255)),
                (
                    "export_date",
                    models.DateTimeField(
                        blank=True, db_comment="Date we pull lead", null=True
                    ),
                ),
                ("last_command_send_date", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(blank=True, null=True)),
                (
                    "account",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="db.account",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="db.category",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="db.user",
                    ),
                ),
            ],
            options={
                "db_table": "leads",
            },
        ),
        migrations.AddField(
            model_name="profile",
            name="proxy",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="db.proxy",
            ),
        ),
        migrations.CreateModel(
            name="Spintax",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=255, unique=True)),
                ("times", models.IntegerField()),
                ("text", models.TextField()),
                ("created_at", models.DateTimeField(blank=True, null=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="db.category",
                    ),
                ),
            ],
            options={
                "db_table": "spintaxes",
            },
        ),
        migrations.CreateModel(
            name="DmPostLead",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "dm_post",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING, to="db.dmpost"
                    ),
                ),
                (
                    "lead",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING, to="db.lead"
                    ),
                ),
            ],
            options={
                "db_table": "dm_post_lead",
                "unique_together": {("dm_post", "lead")},
            },
        ),
    ]
